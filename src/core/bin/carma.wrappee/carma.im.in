#! /bin/sh -
#
# Copyright (C) 2019-2024 Stealth Software Technologies, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an "AS
# IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language
# governing permissions and limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
# This script uses the SST Bash library to bootstrap from /bin/sh into
# bash. See the Bash library > Bootstrapping section of the SST manual
# for more information.
#

#-----------------------------------------------------------------------
# Load the prelude
#-----------------------------------------------------------------------

case ${USE_BUILD_TREE-} in '')
  set -e || exit $?
  . '{@}pkgdatadir{@}/bash/sst.bash'
;; *)
  case $0 in /*) x=$0 ;; *) x=./$0 ;; esac
  r='\(.*/\)'
  x=`expr "$x" : "$r"`. || exit $?
  set -e || exit $?
  . "$x/../../../../src/bash/sst.bash"
esac

#-----------------------------------------------------------------------

carma() {

  local abs_builddir
  local arg
  local got
  local opt
  local parse_options
  local pkglibexecdir
  local pop
  local subcommand
  local -a subcommands
  local x

  abs_builddir=$(cat <<'/../'
{@}abs_builddir{@}x
/../
  )
  abs_builddir=${abs_builddir%?}
  readonly abs_builddir

  pkglibexecdir=$(cat <<'/../'
{@}pkglibexecdir{@}x
/../
  )
  pkglibexecdir=${pkglibexecdir%?}
  readonly pkglibexecdir

  subcommands=(
    client
    draw
    server
    stack
    test
    trace
    whisper
  )
  readonly subcommands

  parse_options=1
  set x "$@"
  while shift && (($# > 0)); do

    if ((parse_options)); then

      #-----------------------------------------------------------------
      # Options terminator
      #-----------------------------------------------------------------

      sst_parse_opt -- forbidden : "$@"
      eval "$pop"
      if ((got)); then
        parse_options=
        continue
      fi

      #-----------------------------------------------------------------
      # --help
      #-----------------------------------------------------------------

      sst_parse_opt --help forbidden : "$@"
      eval "$pop"
      if ((got)); then
        sst_ihs <<<"
          Usage: carma [<option>]... <subcommand> [<arg>]...

          Subcommands: ${subcommands[@]}
        "
        exit 0
      fi

      #-----------------------------------------------------------------
      # Unknown options
      #-----------------------------------------------------------------

      sst_unknown_opt "$1"

      #-----------------------------------------------------------------

    fi

    for subcommand in "${subcommands[@]}"; do
      if [[ "$1" == "$subcommand" ]]; then
        if [[ "${USE_BUILD_TREE-}" ]]; then
          x=$abs_builddir/src/core/libexec/kestrel
        else
          x=$pkglibexecdir
        fi
        x+=/carma-$1
        shift
        exec "$x" "$@"
      fi
    done

    x=$(sst_smart_quote "$1")
    sst_barf "Unknown <subcommand>: $x"

  done
  readonly parse_options

  sst_barf "<subcommand> must be given."

}; readonly -f carma

carma "$@"
